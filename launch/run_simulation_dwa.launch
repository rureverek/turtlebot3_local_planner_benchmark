<!-- 

Usage: roslaunch turtlebot3_local_planner_sim run_simulation_<desired local planner>.launch scenario:=<desired_scenario>
Coords.txt is generated in ./.ros/ directory.

Known bug: if robot is not moving try to launch simulation again.

 -->

<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="scenario" default="Static" doc="scenario type [Static, Dynamic_simple, Dynamic_complex, Maze, Narrow, House, Track, Random]"/>
  <arg name="world" default="$(find turtlebot3_local_planner_sim)/worlds/$(arg scenario)/world.model"/>

<!-- Static Scenario position init -->
  <arg name="x_pos_init" default="13.0" unless="$(eval scenario != 'Static')"/>
  <arg name="y_pos_init" default="-2.0" unless="$(eval scenario != 'Static')"/>
  <arg name="z_pos_init" default="0.0" unless="$(eval scenario != 'Static')"/>
  <arg name="x_pos_nav" default="-4.0" unless="$(eval scenario != 'Static')"/>
  <arg name="y_pos_nav" default="-2.0" unless="$(eval scenario != 'Static')"/>

 <!-- Dynamic_simple Scenario position init -->
  <arg name="x_pos_init" default="-4.0" unless="$(eval scenario != 'Dynamic_simple')"/>
  <arg name="y_pos_init" default="0.0" unless="$(eval scenario != 'Dynamic_simple')"/>
  <arg name="z_pos_init" default="0.0" unless="$(eval scenario != 'Dynamic_simple')"/>
  <arg name="x_pos_nav" default="1.0" unless="$(eval scenario != 'Dynamic_simple')"/>
  <arg name="y_pos_nav" default="0.0" unless="$(eval scenario != 'Dynamic_simple')"/> 

<!-- Dynamic_complex Scenario position init -->
  <arg name="x_pos_init" default="13.5" unless="$(eval scenario != 'Dynamic_complex')"/>
  <arg name="y_pos_init" default="0.0" unless="$(eval scenario != 'Dynamic_complex')"/>
  <arg name="z_pos_init" default="0.0" unless="$(eval scenario != 'Dynamic_complex')"/>
  <arg name="x_pos_nav" default="-12.0" unless="$(eval scenario != 'Dynamic_complex')"/>
  <arg name="y_pos_nav" default="0.0" unless="$(eval scenario != 'Dynamic_complex')"/>

<!-- Maze Scenario position init -->
  <arg name="x_pos_init" default="8.671" unless="$(eval scenario != 'Maze')"/>
  <arg name="y_pos_init" default="-12.264" unless="$(eval scenario != 'Maze')"/>
  <arg name="z_pos_init" default="0.0" unless="$(eval scenario != 'Maze')"/>
  <arg name="x_pos_nav" default="2.881" unless="$(eval scenario != 'Maze')"/>
  <arg name="y_pos_nav" default="10.824" unless="$(eval scenario != 'Maze')"/>

<!-- Narrow Scenario position init -->
  <arg name="x_pos_init" default="3.902" unless="$(eval scenario != 'Narrow')"/>
  <arg name="y_pos_init" default="-5.128" unless="$(eval scenario != 'Narrow')"/>
  <arg name="z_pos_init" default="0.0" unless="$(eval scenario != 'Narrow')"/>
  <arg name="x_pos_nav" default="4.564" unless="$(eval scenario != 'Narrow')"/>
  <arg name="y_pos_nav" default="-0.358" unless="$(eval scenario != 'Narrow')"/>

<!-- House Scenario position init -->
  <arg name="x_pos_init" default="-4.571" unless="$(eval scenario != 'House')"/>
  <arg name="y_pos_init" default="5.013" unless="$(eval scenario != 'House')"/>
  <arg name="z_pos_init" default="0.0" unless="$(eval scenario != 'House')"/>
  <arg name="x_pos_nav" default="5.618" unless="$(eval scenario != 'House')"/>
  <arg name="y_pos_nav" default="-5.482" unless="$(eval scenario != 'House')"/>  

<!-- Track Scenario position init -->
  <arg name="x_pos_init" default="-6.202" unless="$(eval scenario != 'Track')"/>
  <arg name="y_pos_init" default="4.519" unless="$(eval scenario != 'Track')"/>
  <arg name="z_pos_init" default="0.0" unless="$(eval scenario != 'Track')"/>
  <arg name="x_pos_nav" default="-6.413" unless="$(eval scenario != 'Track')"/>
  <arg name="y_pos_nav" default="-10.152" unless="$(eval scenario != 'Track')"/>  

<!-- Big_house Scenario position init -->
  <arg name="x_pos_init" default="-12.547" unless="$(eval scenario != 'Big_house')"/>
  <arg name="y_pos_init" default="8.542" unless="$(eval scenario != 'Big_house')"/>
  <arg name="z_pos_init" default="0.0" unless="$(eval scenario != 'Big_house')"/>
  <arg name="x_pos_nav" default="13.059" unless="$(eval scenario != 'Big_house')"/>
  <arg name="y_pos_nav" default="1.702" unless="$(eval scenario != 'Big_house')"/>  

<!-- Big_house_part_unknown Scenario position init -->
  <arg name="x_pos_init" default="-12.775" unless="$(eval scenario != 'Big_house_part_unknown')"/>
  <arg name="y_pos_init" default="-5.447" unless="$(eval scenario != 'Big_house_part_unknown')"/>
  <arg name="z_pos_init" default="0.0" unless="$(eval scenario != 'Big_house_part_unknown')"/>
  <arg name="x_pos_nav" default="4.052" unless="$(eval scenario != 'Big_house_part_unknown')"/>
  <arg name="y_pos_nav" default="-2.671" unless="$(eval scenario != 'Big_house_part_unknown')"/>  

<!-- Random Scenario position init -->
  <arg name="x_pos_init" default="0.0" unless="$(eval scenario != 'Random')"/>
  <arg name="y_pos_init" default="0.0" unless="$(eval scenario != 'Random')"/>
  <arg name="z_pos_init" default="0.0" unless="$(eval scenario != 'Random')"/>
  <arg name="x_pos_nav" default="5.0" unless="$(eval scenario != 'Random')"/>
  <arg name="y_pos_nav" default="0.0" unless="$(eval scenario != 'Random')"/>  

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world)"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="false"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>
  
<!-- "Simulation node executed" -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model turtlebot3 -x $(arg x_pos_init) -y $(arg y_pos_init) -z $(arg z_pos_init) -param robot_description" />

<!-- Sleep 3 "Laser scan node executed" 
  <arg name="sim_node_start_delay" default="3.0" />  

  <node name="scan_to_scan_filter_chain" pkg="laser_filters" type="scan_to_scan_filter_chain" launch-prefix="bash -c 'sleep $(arg sim_node_start_delay); $0 $@' ">
    <rosparam file="$(find turtlebot3_local_planner_sim)/param/my_laser_config.yaml" command="load"/>
  </node>-->

<!-- Sleep 1 "Navigation node executed" -->
  <include file="$(find turtlebot3_local_planner_sim)/launch/turtlebot3_navigation.launch" >
    <arg name="pose_x" value="$(arg x_pos_init)" />
    <arg name="pose_y" value="$(arg y_pos_init)" />
    <arg name="map_file" value="$(find turtlebot3_local_planner_sim)/worlds/$(arg scenario)/map/map.yaml" />
  </include>

<!-- Sleep 1 "Debug service is running" -->
  <arg name="deb_node_start_delay" default="1.0" />

  <node name="simulation_sv" pkg="turtlebot3_local_planner_sim" type="simulation_sv" launch-prefix="bash -c 'sleep $(arg deb_node_start_delay); $0 $@' "/>

<!-- Sleep 1 "Goal Pub executed" -->
  <arg name="goal_pub_node_start_delay" default="1.0" />

  <node name="goal_publisher" pkg="turtlebot3_local_planner_sim" type="goal_publisher" launch-prefix="bash -c 'sleep $(arg goal_pub_node_start_delay); $0 $@' ">
    <param name="x" value="$(arg x_pos_nav)" />
    <param name="y" value="$(arg y_pos_nav)" />
  </node>
</launch>